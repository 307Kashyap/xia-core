#! /usr/bin/env bash
# create etc/hosts.xia by getting the host dag for our machine
# plus the specified machines and appending it to the hosts file
# then copy the file to the specified machines

[ "$1" == "-v" ] || [ "$1" == "--version" ] && echo "xmakehosts 1.0" && exit 0
if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	cat << EOH

xmakehosts host [host] ...

create etc/hosts.xia on the specified hosts & routers

options:
  host          host(s) to include in the hosts.xia file
  -h, --help    display this help
  -v, --version display the version number

example:
  xmakehosts host1 router1 www.example.com 192.168.1.1

warning:
  hosts.xia on the local and specified machines will be overwritten with the new entries

note:
  XIA must be running and installed in the same location on each machine for this script to work

  names specified on the command line can be IP addresses or resolveable host names

  Connections are made via TCP/IP using ssh & scp rather than over XIA
EOH
	exit 0
fi

XDIR=$(pwd | sed 's/xia-core.*/xia-core/')
HOSTSFILE=$XDIR/etc/hosts.xia

# get the remote host's AD/HID
rdag() {
ssh -o StrictHostKeyChecking=no $h <<ENDSSH
	export XDIR="$XDIR"
	cd \$XDIR
	$XDIR/bin/xdag
ENDSSH
}

# make some bad DAGs for tesing xcmp
badhosts() {
	for x in $($XDIR/bin/xdag); do
		case $x in
			AD:*)
				AD=$x
				;;
			HID:*)
				HID=$x
				;;
		esac
	done

	echo >>$HOSTSFILE
	echo "# Invalid addresses for testing XCMP with xping/xtraceroute" >>$HOSTSFILE 
	echo "badnetwork RE AD:0000000000000000000000000000000000000000 $HID" >>$HOSTSFILE
	echo "badhost RE $AD HID:0000000000000000000000000000000000000000" >>$HOSTSFILE
	echo "badservice RE $AD $HID SID:0000000000000000000000000000000000000000" >>$HOSTSFILE
}

bin/xdag > $HOSTSFILE

for h in $*; do
	rdag $h 2> /dev/null | tail -n1 >>$HOSTSFILE
done

# now make some bad DAGs for xcmp testing
badhosts

# copy to all of the specified hosts
for h in $*; do
	scp $HOSTSFILE $h:$HOSTSFILE
done

cat $HOSTSFILE

