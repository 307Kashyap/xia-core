#!/usr/bin/env python
#
# Copyright 2013 Carnegie Mellon University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import clicksock

APP_VERSION="1.0"

levels = ['LOG_EMERG', 'LOG_ALERT', 'LOG_CRIT', 'LOG_ERR', 'LOG_WARNING', 'LOG_NOTICE', 'LOG_INFO', 'LOG_DEBUG']
status = ['disabled', 'enabled']

#
# custom argparse handler to chose syslog levels
#
def loglevel(arg):
    try:
        value = int(arg)
    except ValueError as err:
       raise argparse.ArgumentTypeError(str(err))

    if value < 0 or value > 7:
        message = "Expected a value in 0..7, got {}".format(value)
        raise argparse.ArgumentTypeError(message)

    return value

#
# let's do this thing!
#
parser = argparse.ArgumentParser(description = 'XIA Log Controller %s' % APP_VERSION)
parser.add_argument("-v", "--verbose", action="store_true", help='enable console logging')
parser.add_argument("-q", "--quiet", action='store_true', help='disable console logging')
parser.add_argument("-l", "--level", type=loglevel, help='syslog level (0=LOG_EMERG through 7=LOG_DEBUG)')
args = parser.parse_args()

with clicksock.clicksock() as click:
	if args.verbose:
		click.writeData("log.verbose 1")
	elif args.quiet:
		click.writeData("log.verbose 0")

	if args.level != None:
		click.writeData("log.level %d" % args.level)

	l = int(click.readData("log.level"))
	v = int(click.readData("log.verbose"))

print "console logging: " + status[v]
print "level: " + levels[l]
