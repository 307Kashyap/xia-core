// THIS FILE IS AUTOMATICALLY GENERATED FROM jacp-spec.org using org-babel-mode
// Do not edit it by hand!  Edit the original and re-generate
// Instructions are found in jacp-spec.org!
//
// Contact Eric Anderson <andersoe@cs.cmu.edu> with questions.

// [[file:jacp-spec.orgmk::*Digitally-Signed%20Data][Digitally-Signed\ Data:1]]
message Signature {
    //algorithm may be omitted if has already been agreed
    enum SignatureAndHashAlgorithm {
        NACL_edwards25519sha512batch = 1; //NaCl standard signing algorithm
    }
    optional SignatureAndHashAlgorithm sig_algorithm = 1;
    required bytes signature = 2;
}
// Digitally-Signed\ Data:1 ends here

// [[file:jacp-spec.orgmk::*Nonces][Nonces:1]]
message Random {
  optional uint32 gmt_unix_time = 1;
  required bytes random_bytes = 2; 
}
// Nonces:1 ends here

// [[file:jacp-spec.orgmk::*Initiation%20(Handshake%20Message%201)][Initiation\ \(Handshake\ Message\ 1\):1]]
message HandshakeOne {
    message HandshakeOneEncrypted {
        required bytes nonce = 1;
        required bytes client_ephemeral_pubkey = 2;
        required bytes encrypted_data = 3; //encrypted (Payload)
        message Payload {
            required bytes hash_of_headers = 1;
            required HandshakeOneCore core = 2;
        }
    }
    message HandshakeOneClear {
        message SignedData {
            required ClientHello hello = 1;
            required HandshakeOneCore core = 2;
        }
        required SignedData signed = 1;
        required Signature client_signature = 2;
    }    
    oneof handshake_type {
        HandshakeOneEncrypted encrypted = 1;
        HandshakeOneClear clear = 2;
    }
}
// Initiation\ \(Handshake\ Message\ 1\):1 ends here

// [[file:jacp-spec.orgmk::*Initiation%20(Handshake%20Message%201)][Initiation\ \(Handshake\ Message\ 1\):2]]
message HandshakeOneCore {
    optional LayerTwoRequest client_l2_req = 1;
    optional LayerThreeRequest client_l3_req = 2;
    optional ClientCredentials client_credentials = 3;
}
// Initiation\ \(Handshake\ Message\ 1\):2 ends here

// [[file:jacp-spec.orgmk::*Key%20Exchange%20/%20Establishment][Key\ Exchange\ /\ Establishment:1]]
message ClientHello {
    enum CipherSuite {
        NACL_curve25519xsalsa20poly1305 = 17;  //The standard (only?) suite recommended by NaCl.
    }
    message NaClSessionParams {
        required bytes pubkey = 1;
    }   
    
    required Random client_nonce = 1;    
    required CipherSuite cipher_suite = 2;
    oneof key_exchange {                        //Must match cipher_suite
        NaClSessionParams nacl_params= 6;
    }
}
// Key\ Exchange\ /\ Establishment:1 ends here

// [[file:jacp-spec.orgmk::*Layer%20Two%20Request][LayerTwoRequest]]
message LayerTwoRequest {
    message EthernetL2Request {
        required bytes client_mac_address = 1;
    }

    message WifiL2Request {
        optional Real80211AssocRequestParams std_params = 1; //Not implemented
        message MinimalXIAWifiParams {
            required bytes bssid = 1;
            required bytes client_mac = 2;
        }        
        optional MinimalXIAWifiParams minimal = 2;
    }
    

    oneof l2_req {
        EthernetL2Request ethernet = 1;
        WifiL2Request wifi = 2;
    }
}
// LayerTwoRequest ends here

// [[file:jacp-spec.orgmk::*Layer%20Three%20Request][Layer\ Three\ Request:1]]
message LayerThreeRequest {
    optional IPv4Request ipv4 =1;
    optional XIPRequest xip = 2;
}
// Layer\ Three\ Request:1 ends here

// [[file:jacp-spec.orgmk::*Layer%203:%20XIA][Layer\ 3:\ XIA:1]]
message XIPRequest {
    message SingleHostXIPRequest {
        required bytes ClientHID = 1;               // Client host ID
        optional bytes ClientAIPPubKey = 2;         // Public key associated with ClientHID
        optional XIPConfigRequest configXIP = 3;
    
    }    
    optional SingleHostXIPRequest single = 1;   // Just attaching one "client" host
}
// Layer\ 3:\ XIA:1 ends here

// [[file:jacp-spec.orgmk::*Request%20to%20be%20Configured][Request\ to\ be\ Configured:1]]
message XIPConfigRequest {
    oneof configure_how {
        PXHCPConfigRequest pxhcp =1;
    }
}

message PXHCPConfigRequest {
    // Empty on purpose.  Currently there are no parameters to this.
};
// Request\ to\ be\ Configured:1 ends here

// [[file:jacp-spec.orgmk::*Credential%20Formats][Credential\ Formats:1]]
message ClientCredentials {
   oneof client_cred_option {
       NullClientCredential null = 1;
   }
}
// Credential\ Formats:1 ends here

// [[file:jacp-spec.orgmk::*Gateway%20Response%20(Handshake%20Message%202)][Gateway\ Response\ \(Handshake\ Message\ 2\):1]]
message HandshakeTwo {
    required AuthMessageTwoClear auth2c = 1;
    required EncryptedData cyphertext = 2; //encrypted (HandshakeTwoProtected)
}

message HandshakeTwoProtected {
    optional bytes whatever = 1;
}

message EncryptedData {
    optional ClientHello.CipherSuite cipher_suite = 1;
    optional Random nonce = 2;
    required bytes cyphertext = 3;
}
// Gateway\ Response\ \(Handshake\ Message\ 2\):1 ends here

// [[file:jacp-spec.orgmk::*Authentication%20and%20Authorization][Authentication\ and\ Authorization:1]]
message AuthMessageTwoClear {
    required ClientHello.CipherSuite cipher_suite = 1;
    optional Random nonce = 2;
    optional ClientHello.NaClSessionParams nacl_params = 3;
}
// Authentication\ and\ Authorization:1 ends here

// [[file:jacp-spec.orgmk::*Some%20dummy%20/%20placeholder%20stubs][Some\ dummy\ /\ placeholder\ stubs:1]]
message Real80211AssocRequestParams {
    // In a real implementation, might want to define a way to import the
    // already-standardized 80211 parameters (and maybe their encoding)
    // whole-hog.  Right now, nope
}

message IPv4Request {
}
// Some\ dummy\ /\ placeholder\ stubs:1 ends here

// [[file:jacp-spec.orgmk::*Some%20dummy%20/%20placeholder%20stubs][Some\ dummy\ /\ placeholder\ stubs:2]]
message NullClientCredential {
}
// Some\ dummy\ /\ placeholder\ stubs:2 ends here
