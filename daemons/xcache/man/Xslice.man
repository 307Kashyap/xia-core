.\" Manpage for Slice manipulation
.TH XcacheSock 8 "05 May 2015" "1.0" "XIA Manual Pages"
.SH NAME
XallocateSlice, XfreeSlice \- Slice manipulation functions.
.SH SYNOPSIS
.nf
.B "#include <xcache.h>"
.sp
.BR "ChunkContext *XallocateSlice(int xcacheSock, struct sliceInfo *info);"
.BR "int XfreeSlice(int xcacheSock, ChunkContext *ctx);"
.fi
.SH DESCRIPTION
.BR XallocateSlice()
creates a context for publishing content using
.B XputBuffer(8),
.B XputFile(8),
.B XputChunk(8).
The argument
.I xcacheSock
must be a connected xcache socket returned by
.B XcacheSock().
The argument
.I info
must point to a structure sliceInfo.

struct sliceInfo {
.RS
enum XcacheEvictionPolicy policy;
.RE
.RS
uint64_t size;
.RE
.RS
uint64_t ttl;
.RE
.RS
int contentStore;
.RE
};

.I info->policy
must choose a value from following enum:

enum XcacheEvictionPolicy {
.RS
XCACHE_EVICT_POLICY_FIFO,
.RE
.RS
XCACHE_EVICT_POLICY_LRU,
.RE
};

.I info->size
is the size of cache slice in bytes. When slice becomes full, xcache evicts a content chunk by following
.I info->policy
eviction policy. The event of eviction is notified back to the application on
.I xcacheSock
as a
.B XCE_EVICTED
notification. See XcacheNotifications(8) for more details.

.I info->ttl
is the timeout in seconds after which all the content chunks are evicted. This eviction generates a
.B XCACHE_SLICE_EXPIRED
notification on
.I xcacheSock.
.I info->ttl
can be set to
.B XCACHE_INF
in which case, the slice never expires until freed by
.B XfreeSlice().

.I info->contentStore
is unused.

.B XfreeSlice()
frees a ChunkContext allocated by
.B XallocateSlice().
Freeing of slice does not generate any xcache notification.

.SH RETURN VALUE
On success,
.B XallocateSlice()
returns a chunk context. On failure, it returns NULL and errno is set appropriately. On success,
.B XfreeSlice()
returns 0. On failure, it returnes -1 and errno is set appropriately.

.SH ERRORS
.B ENOTCONN	
XcacheSock is not connected.

.B EHOSTDOWN	
Xcache is not running.
.B 
.\".SH NOTES

.SH EXAMPLE
See
.BR Xput(8).
.SH SEE ALSO
.B "XcacheSocket(8),"
.B "Xput(8),"
.B "Xget(8)"
.SH AUTHOR
Harshad Shirwadkar <harshad@cmu.edu>
