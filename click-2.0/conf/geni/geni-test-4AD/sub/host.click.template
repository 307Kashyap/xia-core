require(library ../../../xia_router_template_xtransport.click);
require(library ../../../xia_address.click);

// host instantiation
host0 :: EndHost (RE $ADNAME $HID, $HID, fake0, 172.0.0.2, 172.0.0.1, 01:11:11:11:11:11, 0);

// Interface0 ($IFACE)
c0 :: Classifier(12/9990 20/0001, 12/9990 20/0002, 12/9999);  // XARP (query) or XARP (response) or XIP
xarpq0 :: XARPQuerier($HID, $MAC);
xarpr0 :: XARPResponder($HID $MAC);
todevice0 :: ToDevice($IFACE);
fromdevice0 :: FromDevice($IFACE, PROMISC true);
queue0a :: Queue;
queue0b :: Queue;
unqueue0 :: Unqueue;
mux0 :: DRRSched(2);

// On receiving a packet from Interface0
fromdevice0 -> c0;

// On receiving an XIP packet
c0[2] -> Strip(14) -> MarkXIAHeader() 
	-> Print()
	-> XIAPrint("r0->h0")
	-> [0]host0; // XIA packet

	// On receiving XARP response
	c0[1] -> [1]xarpq0;
	xarpq0 -> queue0a -> [0]mux0;
	mux0 -> todevice0;

	// On receiving XARP query
	c0[0] -> xarpr0;
	xarpr0 -> queue0b -> [1]mux0;

	// Sending an XIP packet (via XARP if necessary) to Interface0
	host0[0]
	-> Print()
	-> XIAPrint("h0->r0")
	-> c::XIAXIDTypeCounter(src AD, src HID, src SID, src CID, src IP, -) 
	-> unqueue0
	-> [0]xarpq0

	ControlSocket(tcp, 7777);

